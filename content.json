{"pages":[{"title":"关于","text":"个人详细介绍","link":"/about/index.html"}],"posts":[{"title":"Toast的基本用法","text":"Toast是Android系统提供的一种提醒方式，它可以将一些短信息在Activity上通知用户，过段时间后会自动消失，并且不会占用屏幕空间。 如何使用首先需要定义一个弹出Toast的触发点，在Acivity中添加一个Button按钮用于触发Toast的提示框。 123456789101112131415@Overrideprotected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); //获取布局文件的元素 Button button1 = findViewById(R.id.button_1); //为button1添加点击事件 button1.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { //创建Toast对象调用静态方法makeText()传递参数 Toast.makeText(MainActivity.this,\"Toast提示\",Toast.LENGTH_LONG).show(); } });} Toast.makeText()需要传递3个参数 Toast上下文对象，传递Activity本身即可 字符串数据，用于显示内容 Toast的显示时长，有两个常量可以设置可以选择LENGTH_LONG和LENGTH_SHORT。 运行效果","link":"/2019/03/15/Toast的基本用法/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2017/10/28/hello-world/"},{"title":"Java小案例-杨辉三角算法","text":"Code 123456789101112131415161718192021222324252627282930313233/** * 要求：输出杨辉三角 * @author Administration * */ public class YangHuiTest { public static void main(String[] args) { //创建二维数组，定义了行，没有定义列 int[][] arr = new int[10][]; //动态为列开辟空间(杨辉三角每行的列数和当前行号是相同的，如：第5行有5列) for (int i = 0; i &lt; arr.length; i++) { arr[i] = new int[i+1]; } //赋值操作 for (int i = 0; i &lt; arr.length; i++) { arr[i][0] = 1;//第i行第1列，即每行的第一列都是1 arr[i][i] = 1;//第i行的第i列，即每行的最后一个数都是1 //接下来是杨辉三角的核心部分 for(int j=1;j&lt;i;j++){//注意这里的j需要从1开始算起，因为每一行的第一个数我们已经给赋值了 //当前数值--&gt;上一行该列的数+上一行该列的左边的第一个数（看图） arr[i][j]=arr[i-1][j]+arr[i-1][j-1]; } } //打印输出 for (int i = 0; i &lt; arr.length; i++) { for (int j = 0; j &lt; arr[i].length; j++) { System.out.print(arr[i][j]+\"\\t\"); //不必换行 } System.out.println(); //换行 } } } 输出结果","link":"/2018/04/14/java/"},{"title":"测试文章1","text":"测试文章1 这是内容1这是内容2 这是内容3 标题 2132222","link":"/2018/03/11/测试文章1/"}],"tags":[{"name":"Android","slug":"Android","link":"/tags/Android/"},{"name":"Java","slug":"Java","link":"/tags/Java/"},{"name":"css","slug":"css","link":"/tags/css/"},{"name":"js","slug":"js","link":"/tags/js/"}],"categories":[{"name":"移动开发","slug":"移动开发","link":"/categories/移动开发/"},{"name":"编程语言","slug":"编程语言","link":"/categories/编程语言/"},{"name":"软件资源","slug":"软件资源","link":"/categories/软件资源/"}]}