{"pages":[{"title":"关于","text":"个人详细介绍","link":"/about/index.html"}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2017/10/28/hello-world/"},{"title":"Java小案例-杨辉三角算法","text":"Java使用双重for循环实现杨辉三角的输出Code123456789101112131415161718192021222324252627282930313233/** * 要求：输出杨辉三角 * @author Administration * */ public class YangHuiTest { public static void main(String[] args) { //创建二维数组，定义了行，没有定义列 int[][] arr = new int[10][]; //动态为列开辟空间(杨辉三角每行的列数和当前行号是相同的，如：第5行有5列) for (int i = 0; i &lt; arr.length; i++) { arr[i] = new int[i+1]; } //赋值操作 for (int i = 0; i &lt; arr.length; i++) { arr[i][0] = 1;//第i行第1列，即每行的第一列都是1 arr[i][i] = 1;//第i行的第i列，即每行的最后一个数都是1 //接下来是杨辉三角的核心部分 for(int j=1;j&lt;i;j++){//注意这里的j需要从1开始算起，因为每一行的第一个数我们已经给赋值了 //当前数值--&gt;上一行该列的数+上一行该列的左边的第一个数（看图） arr[i][j]=arr[i-1][j]+arr[i-1][j-1]; } } //打印输出 for (int i = 0; i &lt; arr.length; i++) { for (int j = 0; j &lt; arr[i].length; j++) { System.out.print(arr[i][j]+\"\\t\"); //不必换行 } System.out.println(); //换行 } } } 输出结果","link":"/2018/04/14/java/"},{"title":"测试文章1","text":"测试文章1 这是内容1这是内容2 这是内容3 标题 2132222","link":"/2018/03/11/测试文章1/"}],"tags":[{"name":"Java","slug":"Java","link":"/tags/Java/"},{"name":"Android","slug":"Android","link":"/tags/Android/"},{"name":"css","slug":"css","link":"/tags/css/"},{"name":"js","slug":"js","link":"/tags/js/"}],"categories":[{"name":"编程语言","slug":"编程语言","link":"/categories/编程语言/"},{"name":"软件资源","slug":"软件资源","link":"/categories/软件资源/"}]}